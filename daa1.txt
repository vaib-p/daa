#include<stdio.h>

void knapsack(int n, float profit[], float weight[], int capacity, float object[]) {
    float xi[20], total_profit=0,temp;
    int i,j;
    
    for(i=0; i<n; i++) {
        xi[i] = 0;
    }
    
    for(i=0; i<n; i++) {
        if(weight[i] > capacity) {
            break;
        } else {
            xi[i] = 1;
            total_profit = total_profit + profit[i];
            capacity = capacity - weight[i];
        }
    }
    
    if(i < n) {
        xi[i] = capacity/weight[i];
    }
    total_profit = total_profit + (xi[i]*profit[i]);
    
    for(i=0; i<n; i++) {
        for (j = i + 1; j < n; j++) {
            if(object[i] > object[j]) {
                temp = object[j];
                object[j] = object[i];
                object[i] = temp;
                
                temp = xi[j];
                xi[j] = xi[i];
                xi[i] = temp;
            }
        }
    }
    
    printf("\nThe knapsack sequence is:");
    for(i=0; i<n; i++) {
        printf("%f\t", xi[i]);
    }
    printf("\nThe maximum profit of the given objects is: %f\n",total_profit);
}

int main() {
    float object[20];
    float profit[20];
    float weight[20];
    float ratio[20], temp;
    int capacity;
    int n,i,j;
   
    printf("Please enter the number of elements/objects:");
    scanf("%d", &n);
   
    printf("Please enter the capacity of container:");
    scanf("%d", &capacity);
   
    printf("Please enter number, weight and profit of objects:");
    for(i=0; i<n; i++) {
        scanf("%f %f %f", &object[i], &weight[i], &profit[i]);
    }
   
    for (i = 0; i < n; i++) {
        ratio[i] = profit[i] / weight[i];
    }
 
    for(i=0; i<n; i++) {
        for (j = i + 1; j < n; j++) {
            if(ratio[i] < ratio[j]) {
                temp = ratio[j];
                ratio[j] = ratio[i];
                ratio[i] = temp;
                
                temp = weight[j];
                weight[j] = weight[i];
                weight[i] = temp;
                
                temp = profit[j];
                profit[j] = profit[i];
                profit[i] = temp;
                
                temp = object[j];
                object[j] = object[i];
                object[i] = temp;
            }
        }
    }
   
    knapsack(n, profit, weight, capacity, object);
    return 0;
}


-----------------------------------------------------OUTPUT---------------------------------------------------------

Please enter the number of elements/objects:7
Please enter the capacity of container:15
Please enter number, weight and profit of objects:
1 2 10
2 3 5
3 5 15
4 7 7
5 1 6
6 4 18
7 1 3

The knapsack sequence is:1.000000    0.666667    1.000000    0.000000    1.000000    1.000000    1.000000
The maximum profit of the given objects is: 55.333332
